{"mappings":"ACEA,SAAS,EAAmB,CAAO,EAAE,IAAA,EAAA,CAAA,CAAA,UAAA,MAAA,CAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,EAAA,SAAA,CAAA,EAAA,CAC7B,EAAe,SAAS,aAAa,CAAC,OACtC,EAAoB,SAAS,aAAa,CAAC,MAC3C,EAAmB,SAAS,aAAa,CAAC,IAEhD,CAAA,EAAa,OAAO,CAAC,EAAE,CAAG,eAC1B,EAAa,SAAS,CAAC,GAAG,CAAC,AAAc,CAAA,IAAd,EAAqB,UAAY,SAE5D,EAAkB,WAAW,CAAG,AAAc,CAAA,IAAd,EAAqB,UAAY,QAEjE,EAAiB,WAAW,CAAG,EAE/B,EAAa,WAAW,CAAC,GACzB,EAAa,WAAW,CAAC,GAEzB,SAAS,IAAI,CAAC,WAAW,CAAC,EAC5B,CAGA,IADI,EACA,EAA0B,CAAA,EAC1B,EAAe,CAAA,EACf,EAAqB,CAAA,EAEnB,EAAe,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA3C,EACE,SAAS,gBAAgB,CAAC,QAAS,WACjC,aAAa,GACb,EAAQ,6BACV,GAEA,EAAe,WAAW,WACxB,EAAO,AAAI,MAAM,8BACnB,EAAG,IACL,GAEM,EAAgB,IAAI,QAAQ,SAAC,CAAnC,EACE,SAAS,gBAAgB,CAAC,QAAS,WACjC,EAAe,CAAA,EACf,EAAQ,8BACV,GAEA,SAAS,gBAAgB,CAAC,cAAe,SAAC,CAA1C,EACE,EAAE,cAAc,GAChB,EAAqB,CAAA,EACrB,EAAQ,8BACV,EACF,GAEM,EAAe,IAAI,QAAQ,SAAC,CAAlC,EACE,IAAM,EAAkB,YAAY,WAC9B,GAAgB,IAClB,cAAc,GACd,EAAQ,8BAEZ,EAAG,IACL,GAEA,EACG,IAAI,CAAC,SAAC,CADT,EAEI,EAAmB,EACrB,GACC,KAAK,CAAC,SAAC,CADR,EAEE,EAAmB,EAAM,OAAO,CAAE,CAAA,EACpC,GAEF,EAAc,IAAI,CAAC,SAAC,CAApB,EACO,IACH,EAAmB,GACnB,EAA0B,CAAA,EAE9B,GAEA,EAAa,IAAI,CAAC,SAAC,CAAnB,EACE,EAAmB,EACrB","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction appendNotification(message) {\n    var isSuccess = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;\n    var notification = document.createElement(\"div\");\n    var notificationTitle = document.createElement(\"h3\");\n    var notificationText = document.createElement(\"p\");\n    notification.dataset.qa = \"notification\";\n    notification.classList.add(isSuccess === true ? \"success\" : \"error\");\n    notificationTitle.textContent = isSuccess === true ? \"Success\" : \"Error\";\n    notificationText.textContent = message;\n    notification.appendChild(notificationTitle);\n    notification.appendChild(notificationText);\n    document.body.appendChild(notification);\n}\nvar clickTimeout;\nvar isSecondPromiseResolved = false;\nvar isClickEvent = false;\nvar isContextMenuEvent = false;\nvar firstPromise = new Promise(function(resolve, reject) {\n    document.addEventListener(\"click\", function() {\n        clearTimeout(clickTimeout);\n        resolve(\"First promise was resolved\");\n    });\n    clickTimeout = setTimeout(function() {\n        reject(new Error(\"First promise was rejected\"));\n    }, 3000);\n});\nvar secondPromise = new Promise(function(resolve) {\n    document.addEventListener(\"click\", function() {\n        isClickEvent = true;\n        resolve(\"Second promise was resolved\");\n    });\n    document.addEventListener(\"contextmenu\", function(e) {\n        e.preventDefault();\n        isContextMenuEvent = true;\n        resolve(\"Second promise was resolved\");\n    });\n});\nvar thirdPromise = new Promise(function(resolve) {\n    var checkBothEvents = setInterval(function() {\n        if (isClickEvent && isContextMenuEvent) {\n            clearInterval(checkBothEvents);\n            resolve(\"Third promise was resolved\");\n        }\n    }, 100);\n});\nfirstPromise.then(function(result) {\n    appendNotification(result);\n}).catch(function(error) {\n    appendNotification(error.message, false);\n});\nsecondPromise.then(function(result) {\n    if (!isSecondPromiseResolved) {\n        appendNotification(result);\n        isSecondPromiseResolved = true;\n    }\n});\nthirdPromise.then(function(result) {\n    appendNotification(result);\n});\n\n//# sourceMappingURL=index.7d17c102.js.map\n","'use strict';\n\nfunction appendNotification(message, isSuccess = true) {\n  const notification = document.createElement('div');\n  const notificationTitle = document.createElement('h3');\n  const notificationText = document.createElement('p');\n\n  notification.dataset.qa = 'notification';\n  notification.classList.add(isSuccess === true ? 'success' : 'error');\n\n  notificationTitle.textContent = isSuccess === true ? 'Success' : 'Error';\n\n  notificationText.textContent = message;\n\n  notification.appendChild(notificationTitle);\n  notification.appendChild(notificationText);\n\n  document.body.appendChild(notification);\n}\n\nlet clickTimeout;\nlet isSecondPromiseResolved = false;\nlet isClickEvent = false;\nlet isContextMenuEvent = false;\n\nconst firstPromise = new Promise((resolve, reject) => {\n  document.addEventListener('click', () => {\n    clearTimeout(clickTimeout);\n    resolve('First promise was resolved');\n  });\n\n  clickTimeout = setTimeout(() => {\n    reject(new Error('First promise was rejected'));\n  }, 3000);\n});\n\nconst secondPromise = new Promise((resolve) => {\n  document.addEventListener('click', () => {\n    isClickEvent = true;\n    resolve('Second promise was resolved');\n  });\n\n  document.addEventListener('contextmenu', (e) => {\n    e.preventDefault();\n    isContextMenuEvent = true;\n    resolve('Second promise was resolved');\n  });\n});\n\nconst thirdPromise = new Promise((resolve) => {\n  const checkBothEvents = setInterval(() => {\n    if (isClickEvent && isContextMenuEvent) {\n      clearInterval(checkBothEvents);\n      resolve('Third promise was resolved');\n    }\n  }, 100);\n});\n\nfirstPromise\n  .then((result) => {\n    appendNotification(result);\n  })\n  .catch((error) => {\n    appendNotification(error.message, false);\n  });\n\nsecondPromise.then((result) => {\n  if (!isSecondPromiseResolved) {\n    appendNotification(result);\n    isSecondPromiseResolved = true;\n  }\n});\n\nthirdPromise.then((result) => {\n  appendNotification(result);\n});\n"],"names":["appendNotification","message","isSuccess","arguments","length","notification","document","createElement","notificationTitle","notificationText","dataset","qa","classList","add","textContent","appendChild","body","clickTimeout","isSecondPromiseResolved","isClickEvent","isContextMenuEvent","firstPromise","Promise","resolve","reject","addEventListener","clearTimeout","setTimeout","Error","secondPromise","e","preventDefault","thirdPromise","checkBothEvents","setInterval","clearInterval","then","result","catch","error"],"version":3,"file":"index.7d17c102.js.map"}